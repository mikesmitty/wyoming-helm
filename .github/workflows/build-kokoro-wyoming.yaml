name: Kokoro Wyoming TTS Image

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/build-kokoro-wyoming.yaml"
      - "charts/kokoro-wyoming/docker/**"
  schedule:
    # Rebuild monthly to get updates
    - cron: "0 0 1 * *"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: mikesmitty/kokoro-wyoming-tts

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Extract chart version
        id: chart-version
        run: |
          VERSION=$(awk '/^version:/ {print $2}' charts/kokoro-wyoming/Chart.yaml)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Chart version: ${VERSION}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.chart-version.outputs.version }}
            type=raw,value=${{ steps.chart-version.outputs.version }}-{{date 'YYYYMMDD'}}
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: charts/kokoro-wyoming/docker
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Output image details
        run: |
          echo "Image built and pushed successfully"
          echo "Chart version: ${{ steps.chart-version.outputs.version }}"
          echo "Tags: ${{ steps.meta.outputs.tags }}"
