name: Ollama Intel GPU Image

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/build-ollama-intel.yaml"
      - "charts/ollama-intel/docker/**"
  schedule:
    # Rebuild monthly to get updates
    - cron: "0 0 1 * *"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: mikesmitty/ollama-intel-gpu

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Extract appVersion
        id: app-version
        run: |
          APP_VERSION=$(awk '/^appVersion:/ {print $2}' charts/ollama-intel/Chart.yaml | tr -d '"')
          echo "version=${APP_VERSION}" >> $GITHUB_OUTPUT
          echo "App version: ${APP_VERSION}"

      - name: Extract build arguments from values.yaml
        id: build-args
        run: |
          IPEXLLM_RELEASE_REPO=$(awk '/IPEXLLM_RELEASE_REPO:/ {print $2}' charts/ollama-intel/values.yaml | tr -d '"')
          IPEXLLM_RELEASE_VERSION=$(awk '/IPEXLLM_RELEASE_VERSON:/ {print $2}' charts/ollama-intel/values.yaml | tr -d '"')
          IPEXLLM_PORTABLE_ZIP_FILENAME=$(awk '/IPEXLLM_PORTABLE_ZIP_FILENAME:/ {print $2}' charts/ollama-intel/values.yaml | tr -d '"')

          echo "ipexllm_repo=${IPEXLLM_RELEASE_REPO}" >> $GITHUB_OUTPUT
          echo "ipexllm_version=${IPEXLLM_RELEASE_VERSION}" >> $GITHUB_OUTPUT
          echo "ipexllm_zip=${IPEXLLM_PORTABLE_ZIP_FILENAME}" >> $GITHUB_OUTPUT

          echo "IPEX-LLM Repo: ${IPEXLLM_RELEASE_REPO}"
          echo "IPEX-LLM Version: ${IPEXLLM_RELEASE_VERSION}"
          echo "IPEX-LLM Zip: ${IPEXLLM_PORTABLE_ZIP_FILENAME}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.app-version.outputs.version }}
            type=raw,value=${{ steps.app-version.outputs.version }}-{{date 'YYYYMMDD'}}
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: charts/ollama-intel/docker
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            IPEXLLM_RELEASE_REPO=${{ steps.build-args.outputs.ipexllm_repo }}
            IPEXLLM_RELEASE_VERSION=${{ steps.build-args.outputs.ipexllm_version }}
            IPEXLLM_PORTABLE_ZIP_FILENAME=${{ steps.build-args.outputs.ipexllm_zip }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Output image details
        run: |
          echo "Image built and pushed successfully"
          echo "App version: ${{ steps.app-version.outputs.version }}"
          echo "IPEX-LLM version: ${{ steps.build-args.outputs.ipexllm_version }}"
          echo "Tags: ${{ steps.meta.outputs.tags }}"
